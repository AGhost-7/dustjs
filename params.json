{"name":"Dustjs","tagline":"Asynchronous templates for the browser and node.js","body":"<html>\r\n<head>\r\n<meta charset='utf-8'>\r\n<meta http-equiv=\"X-UA-Compatible\" content=\"chrome=1\">\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n<link href='https://fonts.googleapis.com/css?family=Architects+Daughter' rel='stylesheet' type='text/css'>\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheets/stylesheet.css\" media=\"screen\" />\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheets/pygment_trac.css\" media=\"screen\" />\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheets/print.css\" media=\"print\" />\r\n<!--[if lt IE 9]>\r\n    <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>\r\n    <![endif]-->\r\n<title>Dust by LinkedIn</title>\r\n</head>\r\n<body>\r\n<header>\r\n<div class=\"inner\">\r\n  <h1>Dust</h1>\r\n  <h2>Asynchronous templates for the browser and node.js</h2>\r\n  <a href=\"https://github.com/linkedin/dustjs\" class=\"button\"><small>View project on</small>GitHub</a>\r\n</div>\r\n</header>\r\n<div id=\"content-wrapper\">\r\n  <div class=\"inner clearfix\">\r\n    <section id=\"main-content\">\r\n    <h1>Dust<a href=\"http://travis-ci.org/linkedin/dustjs\"><img src=\"https://secure.travis-ci.org/linkedin/dustjs.png\" alt=\"Build Status\"></a>\r\n    </h1>\r\n   <h2>Dust Highlights!</h2>\r\n    <ul>\r\n      <li>async/streaming operation</li>\r\n      <li>browser/node compatibility</li>\r\n      <li>extended Mustache/ctemplate syntax</li>\r\n      <li>clean, low-level API</li>\r\n      <li><a href=\"http://linkedin.github.com/dustjs/benchmark/index.html\">high performance</a></li>\r\n      <li>composable templates</li>\r\n    </ul>\r\n    <h1>This is the LinkedIn fork of Dust</h1>\r\n    <p>\r\n      Details in the blog post : <a href=\"http://engineering.linkedin.com/frontend/leaving-jsps-dust-moving-linkedin-dustjs-client-side-templates\">\r\n      Leaving jsps in the Dust</a>\r\n    </p>\r\n    <p>\r\n      We chose Dust after evaluating a bunch of others. Read more here : <a href=\"http://engineering.linkedin.com/frontend/client-side-templating-throwdown-mustache-handlebars-dustjs-and-more\">\r\n      Dust for client templates at LinkedIn </a>\r\n    </p>\r\n    <p>\r\n      We will gradually be extending this library with core feature enhancements, helper functions and bug fixes.\r\n    </p>\r\n    \r\n    <h2>Dust Quick Tutorial</h2>\r\n    <p>\r\n      <a href=\"https://github.com/linkedin/dustjs/wiki/Dust-Tutorial\">Learn how to use LinkedIn fork of Dust</a>\r\n    </p>\r\n    <h2>Dust core features - Code examples</h2>\r\n    <p>\r\n      <a href=\"http://linkedin.github.com/dustjs/test/test.html\">Learn by playing with the dust templates</a>\r\n    </p>\r\n    <h2>Dust helpers - Code examples </h2>\r\n    <p>\r\n      <a href=\"http://linkedin.github.com/dustjs/test/test.html?q=helpers\">Learn how to use the helpers</a>\r\n    </p>\r\n    <h2>Dust With Express/Node </h2>\r\n    <p>\r\n      <a href=\"https://github.com/chovy/express-template-demo\">Get started with using dust with express in node.js</a>\r\n    </p>\r\n    <h3>LinkedIn additions include:</h3>\r\n    <h4>Release 1.2.0</h4>\r\n    <h5>Core enhancements</h5>\r\n    <ul>\r\n      <li>Added template trim of white spaces to dust.compile </li>\r\n      <li>Npm dependencies updated</li>\r\n      <li>Eol rule removed from buffer rule in the parser</li>\r\n    </ul>\r\n    <h5>Bug fixes/ perf improvements</h5>\r\n    <ul>\r\n      <li>Fixed bugs: GH-148, GH-187, GH-183, GH-166, GH-186, GH-162, GH-69, GH-173, GH-182, GH-188, GH-185, GH-184, GH-189, GH-191, GH-180, GH-61, GH-193, GH-198, GH-199, GH-203, GH-195, GH-211, GH-215, GH-216, GH-206, GH-212, GH-217, GH-96, GH-219, GH-220, GH-222</li>\r\n    </ul>\r\n    <h5>Test enhancements</h5>\r\n    <ul>\r\n      <li>Tests's description updated to be more descriptive. </li>\r\n      <li>Bug fixes and UI improved.</li>\r\n      <li>Tests grouped by category</li>\r\n    </ul>\r\n    <h4>Release 1.1.0</h4>\r\n    <h5>Core enhancements</h5>\r\n    <ul>\r\n      <li>Extend the #section block to support $idx and $len for lists of primitives </li>\r\n      <li>Add support for assigning multiple event-listeners on stream</li>\r\n    </ul>\r\n    <h5>Bug fixes/ perf improvements</h5>\r\n    <ul>\r\n      <li>Fix the #section block on how it behaves with empty arrays. Maintain consistency between ?, # and ^ for truthy/falsy evaluations </li>\r\n      <li>Fix \"this\" value in anonymous functions passed into the context object</li>\r\n      <li>Handle undefined filters and helpers gracefully</li>\r\n    </ul>\r\n    <h5>Extensions and helpers </h5>\r\n    <ul>\r\n      <li>Helpers are now in its own node package<a href=\"https://github.com/linkedin/dustjs-helpers\"> See here </a></li>\r\n      <li>@math for simple math operations such as add/subtract/mod/ceil etc. It also supports branching based on the output of math operation</li>\r\n      <li>@size helper for determining the size of lists/objects/primitives</li>\r\n      <li>@contextDump helper for debugging the current context in the dust stack</li>\r\n    </ul>\r\n   <p>NOTE: We have removed dust helpers code from the dustjs-linkedin repo from V1.1.1, use npm install   dustjs-helpers instead for using the helpers</p>\r\n    <h4>Release 1.0.0</h4>\r\n    <h5>Core enhancements</h5>\r\n    <ul>\r\n      <li>Extend partials to support inline params like #sections</li>\r\n      <li>Section index for lists of objects,$idx in the context</li>\r\n      <li>Section size/length for lists of objects, $len in the context</li>\r\n      <li>Extend grammar to relax whitespace/eol for certain Dust tags</li>\r\n      <li>Support numbers in the inline params</li>\r\n      <li>Extend core support for accessing single dimensional array with [] notation</li>\r\n      <li>Support dynamic blocks, similar to dynamic partials</li>\r\n      <li>Add pipe support for Node.js</li>\r\n      <li>Add support for runnin on V8/rhino</li>\r\n      <li>Extend filters for JSON.stringify and JSON.parse</li>\r\n      <li>Jasmine for unit tests</li>\r\n      <li>Travis CI for continuos build and Cover for code coverage report</li>\r\n    </ul>\r\n    <h5>Bug fixes/ perf improvements</h5>\r\n    <ul>\r\n      <li>Fix to support &gt; node0.4 </li>\r\n      <li>Fix to peg.js to print the line and column number for syntax errors in dust templates</li>\r\n      <li>Improved compile times by 10X by optimizing the way we used the peg parser</li>\r\n    </ul>\r\n    <h5>Extensions and helpers </h5>\r\n    <ul>\r\n      <li>Simple logic/branching helpers with @select/ @eq/ @lt etc</li>\r\n      <li>Versatile @if helper relies on the eval for complex expression evaluation, Here are the perf results for eval <a href=\"http://jsperf.com/dust-if\">http://jsperf.com/dust-if</a>. Use with caution, since eval is known to be slow.\r\n    </ul>\r\n    <h2>Installation</h2>\r\n    <p>\r\n      For LinkedIn Dust\r\n    </p>\r\n    <pre>\r\n      <code>$ npm install dustjs-linkedin </code>\r\n    </pre>\r\n    <p>\r\n      For LinkedIn Dust helpers\r\n    </p>\r\n    <pre>\r\n      <code>$ npm install dustjs-helpers </code>\r\n    </pre>\r\n    <p>\r\n      To render compiled templates in the browser:\r\n    </p>\r\n    <pre>\r\n      <code>&lt;script src=\"dust-core-1.0.0.min.js\"&gt;&lt;/script&gt; </code>\r\n    </pre>\r\n    <p>\r\n      To compile a template on the command line, use the dustc command. Its syntax is:\r\n    </p>\r\n    <pre>\r\n      <code>dustc [{-n|--name}=&lt;template_name&gt;] {inputfilename|-} [&lt;outputfilename&gt;] </code>\r\n    </pre>\r\n    <p>\r\n      For example, to compile a template on the command line and have it registered under the same name as the source file:\r\n    </p>\r\n    <pre>\r\n      <code>$ dustc template.html </code>\r\n    </pre>\r\n    <p>\r\n      You can customize the name under which the template is registered:\r\n    </p>\r\n    <pre>\r\n      <code>$ dustc --name=mytemplate template.html </code>\r\n    </pre>\r\n    <h2>Running Tests</h2>\r\n    <p>\r\n      To run tests:\r\n    </p>\r\n    <pre>\r\n      <code>$ make test </code>\r\n    </pre>\r\n    <p>\r\n      To run jasmine tests:\r\n    </p>\r\n    <pre>\r\n      <code>$ make jasmine </code>\r\n    </pre>\r\n    <h2>Coverage report</h2>\r\n    <p>\r\n      To generate code coverage report:\r\n    </p>\r\n    <pre>\r\n      <code>$ npm install cover -g $ make coverage </code>\r\n    </pre>\r\n    <p>\r\n      To view HTML test coverage report:\r\n    </p>\r\n    <pre>\r\n      <code>$ open cover_html/index.html</code>\r\n    </pre>\r\n    <h2>Dust Coverage Online!</h2>\r\n    <ul>\r\n      <li><a href=\"http://linkedin.github.com/dustjs/cover_html/index.html\">Click Here</a></li>\r\n    </ul>\r\n    <h2>Minify dust files</h2>\r\n    <p>\r\n      If you need a minified version of Dust, you will find it in the \"dist\" folder. If the minified files do not exist, you can generate them using\r\n    </p>\r\n    <p>\r\n      Install all the dependencies to minify first\r\n    </p>\r\n    <pre>\r\n      <code>$ npm install</code>\r\n    </pre>\r\n    <pre>\r\n      <code>$ make min</code>\r\n    </pre>\r\n    <h2>Guidelines - Contributing to LinkedIn Dust</h2>\r\n    <p>\r\n      <a href=\"https://github.com/linkedin/dustjs/wiki/How-to-Contribute\">If you are interested in contributing?</a>\r\n    </p>\r\n    </section>\r\n    <aside id=\"sidebar\">\r\n    <a href=\"https://github.com/linkedin/dustjs/zipball/master\" class=\"button\">\r\n    <small>Download</small>\r\n    .zip file </a>\r\n    <a href=\"https://github.com/linkedin/dustjs/tarball/master\" class=\"button\">\r\n    <small>Download</small>\r\n    .tar.gz file </a>\r\n    <p class=\"repo-owner\">\r\n      <a href=\"https://github.com/linkedin/dustjs\"></a> is maintained by <a href=\"https://github.com/linkedin\">linkedin</a>.\r\n    </p>\r\n    <p>\r\n      This page was generated by <a href=\"pages.github.com\">GitHub Pages</a> using the Architect theme by <a href=\"http://twitter.com/jasonlong\">Jason Long</a>.\r\n    </p>\r\n    </aside>\r\n  </div>\r\n</div>\r\n</body>\r\n</html>","google":"UA-39567786-1","note":"Don't delete this file! It's used internally to help with page regeneration."}